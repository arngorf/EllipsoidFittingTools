import matplotlib.pyplot as plt
import numpy as np
import random

def radiiErrorAsFunctionOfAddedError():
    res = [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.2, 4.3, 4.4, 4.5, 4.6, 4.7, 4.8, 4.9, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 6, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6, 6.7, 6.8, 6.9, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.2, 8.3, 8.4, 8.5, 8.6, 8.7, 8.8, 8.9, 9, 9.1, 9.2, 9.3, 9.4, 9.5, 9.6, 9.7, 9.8, 9.9]
    ea = [-3.36797e-16, -0.000233055, -0.00222442, -0.00544339, -0.00677801, -0.0133734, -0.0169486, -0.02131, -0.0250608, -0.024726, -0.0444133, -0.0475011, -0.0517536, -0.0633649, -0.0573035, -0.0754516, -0.0869197, -0.108265, -0.100166, -0.116359, -0.119717, -0.144051, -0.145823, -0.183374, -0.183309, -0.204163, -0.20378, -0.211141, -0.234038, -0.254953, -0.276615, -0.304243, -0.315589, -0.328536, -0.34493, -0.369377, -0.384938, -0.423768, -0.443591, -0.464453, -0.479519, -0.556591, -0.542091, -0.544039, -0.589186, -0.651388, -0.663054, -0.724599, -0.736874, -0.773704, -0.837881, -0.830591, -0.90871, -0.905306, -0.958134, -1.00463, -1.08668, -1.16943, -1.15643, -1.19056, -1.2298, -1.31269, -1.33967, -1.37707, -1.47661, -1.54273, -1.60019, -1.63993, -1.66705, -1.77124, -1.75647, -1.98567, -2.05732, -2.09565, -2.03569, -2.14858, -2.23465, -2.30923, -2.46131, -2.54594, -2.68317, -2.68979, -2.8203, -2.89748, -2.97875, -3.08814, -3.17167, -3.27377, -3.37409, -3.69878, -3.6372, -3.74813, -3.80807, -3.94716, -4.11253, -4.15132, -4.31791, -4.56064, -4.66326, -4.64763]
    eb = [-3.60956e-16, 0.000215649, 0.00308892, 0.00441108, 0.0093425, 0.0169008, 0.0175982, 0.0243911, 0.0311678, 0.0382052, 0.0534285, 0.0639734, 0.0691994, 0.095128, 0.10117, 0.100195, 0.122535, 0.154326, 0.15294, 0.153115, 0.187375, 0.21503, 0.230092, 0.229289, 0.244905, 0.279239, 0.291865, 0.300336, 0.323271, 0.329126, 0.349162, 0.35688, 0.371851, 0.434355, 0.427125, 0.412199, 0.440607, 0.451382, 0.455481, 0.48519, 0.500597, 0.533919, 0.560398, 0.517122, 0.519987, 0.562218, 0.560795, 0.575206, 0.594739, 0.599425, 0.606956, 0.593138, 0.608354, 0.610677, 0.540193, 0.664276, 0.610841, 0.56884, 0.65996, 0.59359, 0.624997, 0.61818, 0.609249, 0.59787, 0.595285, 0.602422, 0.56723, 0.567786, 0.556177, 0.534111, 0.518464, 0.536401, 0.474596, 0.517116, 0.473804, 0.463011, 0.354609, 0.379791, 0.364511, 0.361959, 0.312174, 0.338708, 0.340127, 0.236158, 0.265835, 0.25911, 0.212677, 0.160096, 0.187565, 0.117553, 0.128705, 0.0484322, 0.0385793, -0.0305492, -0.0335023, -0.0630974, -0.0926477, -0.172358, -0.171978, -0.216488]
    ec = [6.84253e-16, 0.00038888, 0.00103725, 0.00184028, 0.00105017, 0.0020118, 0.00329792, 0.00371267, 0.00208174, 0.00510443, 0.00895688, 0.00466922, 0.00466917, 0.00690343, 0.00672285, 0.0181272, 0.0129117, 0.00376162, 0.00594241, 0.0121422, 0.0118892, 0.0207301, 0.0119252, 0.0242826, 0.0247901, 0.0211406, 0.0371635, 0.0305341, 0.0320489, 0.0316914, 0.0628745, 0.0530139, 0.0707364, 0.0526877, 0.0693747, 0.0672674, 0.073099, 0.102773, 0.100196, 0.114922, 0.118659, 0.16813, 0.126602, 0.148594, 0.147962, 0.173103, 0.20785, 0.210083, 0.229025, 0.225795, 0.255874, 0.261195, 0.30613, 0.328756, 0.340434, 0.355065, 0.377832, 0.449398, 0.387722, 0.434377, 0.452715, 0.448649, 0.511019, 0.525595, 0.583736, 0.580033, 0.644185, 0.635812, 0.674412, 0.721397, 0.723245, 0.779681, 0.795225, 0.817794, 0.818584, 0.920692, 0.911935, 0.923983, 1.02006, 1.02998, 1.08819, 1.09874, 1.1665, 1.20556, 1.17004, 1.23921, 1.27245, 1.29273, 1.29275, 1.39427, 1.461, 1.43389, 1.4722, 1.49481, 1.51746, 1.57058, 1.65149, 1.69252, 1.70181, 1.74357]
    va = [3.11141e-27, 0.00276663, 0.0113117, 0.0247987, 0.043231, 0.0702587, 0.0984244, 0.133982, 0.176457, 0.221952, 0.271122, 0.322129, 0.401174, 0.458236, 0.548772, 0.610999, 0.697502, 0.785658, 0.87092, 0.949158, 1.04365, 1.16845, 1.27764, 1.4085, 1.53016, 1.62973, 1.73632, 1.98197, 2.05189, 2.24322, 2.3308, 2.5859, 2.652, 2.84134, 3.16021, 3.24557, 3.46855, 3.6633, 3.71163, 3.88427, 4.24721, 4.41206, 4.71251, 4.78343, 5.05057, 5.39166, 5.56014, 5.75041, 5.95636, 6.28819, 6.67439, 6.80247, 7.38653, 7.68276, 7.67946, 7.86105, 8.3098, 8.8494, 9.28238, 9.64182, 9.70559, 10.1656, 10.4037, 10.489, 11.1174, 11.743, 11.9059, 12.5535, 12.7091, 13.5523, 13.5501, 14.7715, 15.4479, 15.1459, 15.7023, 16.2127, 16.6533, 21.3877, 18.57, 18.5239, 19.5309, 20.5359, 20.5086, 21.7277, 26.3373, 22.4177, 24.0158, 24.2936, 24.9269, 374.484, 29.4451, 34.7953, 35.9776, 29.8006, 31.0232, 33.2839, 33.6867, 178.852, 117.748, 39.1365]
    vb = [3.37295e-27, 0.00228914, 0.0091566, 0.0206874, 0.037392, 0.0566973, 0.0799013, 0.110501, 0.145152, 0.172825, 0.219328, 0.269024, 0.320539, 0.372342, 0.422491, 0.486024, 0.576074, 0.624928, 0.71467, 0.782197, 0.845261, 0.940929, 1.03943, 1.13044, 1.20238, 1.29478, 1.3997, 1.55219, 1.6481, 1.79474, 1.91851, 2.06152, 2.2172, 2.30703, 2.43219, 2.56259, 2.74692, 2.84558, 2.96576, 3.15598, 3.31658, 3.46013, 3.73389, 3.78897, 3.87149, 4.13824, 4.23714, 4.44339, 4.61161, 4.74617, 4.95488, 5.06496, 5.46501, 5.58779, 5.71684, 5.82867, 6.13686, 6.35991, 6.62489, 6.73917, 7.03833, 7.13887, 7.39857, 7.3965, 7.76305, 8.07504, 8.12366, 8.37769, 8.98144, 8.9078, 8.95377, 9.12682, 9.8979, 9.73287, 9.7527, 10.1319, 10.3741, 10.5201, 10.7034, 10.6887, 11.5925, 11.7566, 11.8213, 11.9131, 12.3113, 12.5715, 12.7643, 12.8319, 13.3728, 13.6489, 13.7025, 13.9625, 14.2339, 14.4502, 14.7844, 14.8652, 15.3631, 15.5753, 15.7284, 15.9254]
    vc = [5.97692e-28, 0.000659006, 0.00256456, 0.00585064, 0.0104953, 0.0168638, 0.0246277, 0.0333048, 0.0438585, 0.0559948, 0.0707011, 0.0870232, 0.105492, 0.125443, 0.150449, 0.170801, 0.195922, 0.228962, 0.253751, 0.289072, 0.323206, 0.35849, 0.396225, 0.435851, 0.499408, 0.546714, 0.611709, 0.649561, 0.726172, 0.794689, 0.853518, 0.933976, 1.00458, 1.07277, 1.17971, 1.21882, 1.33021, 1.43157, 1.50703, 1.6509, 1.7639, 1.83232, 1.99302, 2.08874, 2.22582, 2.35111, 2.53019, 2.58526, 2.7175, 2.90411, 3.11706, 3.21051, 3.4784, 3.64017, 3.74078, 3.98463, 4.1691, 4.36808, 4.51479, 4.64393, 5.02945, 5.01274, 5.33494, 5.80934, 5.68961, 6.18136, 6.45547, 6.57156, 6.76017, 6.99071, 7.0327, 7.33323, 7.66821, 7.96721, 8.03721, 8.29242, 8.40456, 8.68168, 9.22142, 9.19981, 9.82916, 9.75131, 10.4605, 10.3407, 10.7739, 10.8857, 11.057, 11.2382, 11.3608, 12.1116, 12.3538, 12.3928, 12.5871, 12.7582, 13.4979, 13.4663, 13.7019, 14.1902, 13.822, 14.5094]
    eac = [3.85247e-17, 1.82931e-05, 8.97787e-05, 0.000195193, 0.000181654, 0.000366504, 0.000502426, 0.000621514, 0.000640213, 0.000784324, 0.0013342, 0.00128936, 0.0013835, 0.00171599, 0.00145164, 0.00239997, 0.00241151, 0.00272053, 0.00243396, 0.00314858, 0.00311314, 0.0041742, 0.00388024, 0.00527659, 0.00510421, 0.00548289, 0.00611122, 0.00618572, 0.00678098, 0.00712192, 0.00885248, 0.00941642, 0.0103016, 0.0100287, 0.0108068, 0.0114718, 0.0121776, 0.0144289, 0.0150715, 0.0158326, 0.0165754, 0.0208178, 0.0186111, 0.0193296, 0.0207045, 0.0238954, 0.0251025, 0.0272063, 0.0277658, 0.028635, 0.0317753, 0.0320502, 0.0361544, 0.036758, 0.0390364, 0.0404042, 0.0440605, 0.0493398, 0.0467557, 0.0494693, 0.0512218, 0.0532635, 0.0574959, 0.0587273, 0.063614, 0.0663885, 0.0706314, 0.0713776, 0.0736425, 0.078384, 0.0783279, 0.0878421, 0.0901264, 0.0922432, 0.0908656, 0.0990589, 0.100816, 0.104189, 0.113282, 0.116611, 0.123716, 0.124194, 0.131459, 0.134776, 0.135829, 0.141764, 0.145113, 0.15026, 0.153337, 0.168044, 0.169474, 0.172891, 0.174458, 0.18108, 0.187598, 0.189951, 0.200102, 0.209505, 0.213286, 0.214977]

    plt.subplot(2,1,1)
    plt.plot(res, ea, label='1st radii error')
    plt.plot(res, eb, label='2nd radii error')
    plt.plot(res, ec, label='3rd radii error')
    plt.plot(res, [(a+b+c)/3.0 for a,b,c in zip(ea,eb,ec)],color='black', label='Average')
    plt.plot([res[0],res[-1]],[0,0],color='red',ls='--', label='0')
    plt.legend()
    plt.xlabel('Variance of point error')
    plt.ylabel('Radii Error')



    plt.subplot(2,1,2)
    plt.plot(res, eac, label='fitted')
    plt.xlabel('Variance of point error')
    plt.ylabel('a/c ratio change')

    eactest = []

    for sd in res:
        eactest.append(0)
        for m in range(10000):
            a = 50
            b = random.uniform(30,50)
            c = random.uniform(30,50)

            if (b < c):
                b,c = c,b
            ac = a/c

            a += np.random.normal(0,sd)
            b += np.random.normal(0,sd)
            c += np.random.normal(0,sd)

            c,b,a = sorted([c,b,a])

            eactest[-1] += a/c - ac

        eactest[-1] /= 10000.0

    plt.plot(res, eactest, label='test')

    plt.legend()
    plt.show()

def ellipsoidNormContourPlot():
    A = 1.07178
    B = 0.781094
    C = 1.14713
    D = -0.831292
    E = 0.720864
    F = -0.85981
    G = -40.0508
    H = 32.2521
    II = -29.3632
    J = 314.921

    f = lambda x,y,z: A*x**2 + B*y**2 + C*z**2 + D*x*y + E*x*z + F*y*z + G*x + H*y + II*z+ J

    I = np.zeros((100,100))

    step = 400./100.

    print f(1,2,3)

    for j in range(100):
        for i in range(100):
            I[j,i] = f(-200+i*step,-200+j*step,0)

    plt.imshow(I)
    plt.contour(I)
    plt.colorbar()
    plt.show()

if __name__ == '__main__':
    #radiiErrorAsFunctionOfAddedError()
    ellipsoidNormContourPlot()

